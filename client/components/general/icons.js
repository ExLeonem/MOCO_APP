import React, {Component} from 'react';
import {yellow, snow} from '../colors';
import Svg, {Path, Rect, Ellipse, Circle} from 'react-native-svg'; // TODO: Linking for iOS needed?


const scaleIconSize = (scaleBy, width = 24, height = 24) => {
    return {
        height: height + scaleBy,
        width: width + scaleBy
    }
}

const AddIcon = ({scaleBy=0, color}) => {
    let {height, width} = scaleIconSize(scaleBy);
    return (
        <Svg width={width} height={height} viewBox="0 0 24 24" fill="none">
            <Path 
                d="M13 13.7634L23 13.7634L23 10.7634L13 10.7634L13 0.763428L10 0.763428L10 10.7634H1.31134e-07L0 13.7634H10V23.7634H13V13.7634Z"  
                fill={color}
            />
        </Svg>
    );
}

const RemoveIcon = ({scaleBy=0, color}) => {
    let {height, width} = scaleIconSize(scaleBy);
    return (
        <Svg width={width} height={height} viewBox="0 0 20 20" fill="none">
            <Path 
                d="M9.27638 11.954L16.3475 19.0251L18.4689 16.9038L11.3977 9.83264L18.4688 2.76158L16.3474 0.640259L9.27638 7.71132L2.20541 0.640353L0.0840909 2.76167L7.15506 9.83264L0.0839844 16.9037L2.2053 19.025L9.27638 11.954Z"
                fill={color}
            />
        </Svg>
    );
}

const BackIcon = ({scaleBy=0, color}) => {
    let {height, width} = scaleIconSize(scaleBy);
    return (
        <Svg width={width} height={height} viewBox="0 0 13 20" fill="none">
            <Path d="M11 2L3 10L11 18" stroke={color} strokeWidth="2"/>
        </Svg>
    );
}

const ForwardIcon = ({scaleBy=0, color}) => {
    let {height, width} = scaleIconSize(scaleBy);
    return (
        <Svg width={width} height={height} viewBox="0 0 13 20" fill="none">
            <Path d="M2 2L10 10L2 18" stroke={color} strokeWidth="2"/>
        </Svg>
    )
}

// Stroke needs width 
const CheckIcon = ({scaleBy=0, color}) => {
    let {height, width} = scaleIconSize(scaleBy);
    return (
        <Svg  width={width} height={height} viewBox="0 0 24 18" fill="none">
            <Path d="M2 8.5L8.66667 15L22 2" stroke={color} strokeWidth="2"/>
        </Svg>
    );
}

const ArrowIcon = ({scaleBy=0}) => {
    let {width, height} = scaleIconSize(scaleBy, 18, 16);
    return (
        <Svg width={width} height={height} viewBox="0 0 18 16" fill="none">
            <Path d="M0.292892 7.29289C-0.0976315 7.68342 -0.0976315 8.31658 0.292892 8.70711L6.65685 15.0711C7.04738 15.4616 7.68054 15.4616 8.07107 15.0711C8.46159 14.6805 8.46159 14.0474 8.07107 13.6569L2.41421 8L8.07107 2.34315C8.46159 1.95262 8.46159 1.31946 8.07107 0.928932C7.68054 0.538408 7.04738 0.538408 6.65685 0.928932L0.292892 7.29289ZM18 7L1 7V9L18 9V7Z" fill="#424B54"/>
        </Svg>
    );
}


const DrawerIcon = ({scaleBy=0, color}) => {
    let {height, width} = scaleIconSize(scaleBy, 18, 14);
    
    return (
        <Svg width={width} height={height} viewBox="0 0 18 14" fill="none">
            <Rect width="18" height="2" fill={color}/>
            <Rect y="6" width="13" height="2" fill={color}/>
            <Rect y="12" width="7" height="2" fill={color}/>
        </Svg>
    );
}


const LampIcon = ({scaleBy=0, isOn=true}) => {
    let {height, width} = scaleIconSize(scaleBy, 178, 192);
    return (
        <Svg width={width} height={height} viewBox="0 0 178 192" fill="none" >
            <Path 
                d="M89 0L158.583 33.5094L175.769 108.804L127.616 169.186H50.3843L2.23141 108.804L19.417 33.5094L89 0Z" 
                fill={isOn? "#FFFDCD": "#F9F9F9"}
            />
            <Path 
                fill-rule="evenodd" 
                clip-rule="evenodd" 
                d="M157.615 131.569L127.616 169.186H50.3843L18.9318 129.746C18.7104 127.563 18.597 125.349 18.597 123.11C18.597 85.9306 49.8393 55.791 88.3786 55.791C126.918 55.791 158.16 85.9306 158.16 123.11C158.16 125.975 157.975 128.798 157.615 131.569Z" 
                fill={isOn? "#FDFAA6": "#F1F1F1"}
            />
            <Path 
                fill-rule="evenodd" 
                clip-rule="evenodd" 
                d="M114.838 169.186H60.5049C49.5738 161.186 42.5074 148.476 42.5074 134.164C42.5074 109.954 62.7281 90.3284 87.6716 90.3284C112.615 90.3284 132.836 109.954 132.836 134.164C132.836 148.476 125.769 161.186 114.838 169.186Z" 
                fill={isOn? "#FFF64F" : "#DEDEDE"}
            />
            <Path 
                d="M59 178H117V187C117 189.761 114.761 192 112 192H64C61.2386 192 59 189.761 59 187V178Z" 
                fill="#424B54"
            />
        </Svg>
    )
}


const SettingsIcon = ({scaleBy=0}) => {
    let {height, width} = scaleIconSize(scaleBy, 19, 19);
    return(
        <Svg width={width} height={height} viewBox="0 0 19 19" fill="none">
            <Path d="M18.0219 7.38889H16.2443C15.9586 7.38889 15.7232 7.23161 15.6138 6.96772C15.5044 6.70383 15.5599 6.42587 15.7616 6.22391L17.0184 4.96744C17.2031 4.78272 17.3048 4.53678 17.3048 4.2757C17.3048 4.01428 17.2031 3.76869 17.0184 3.58361L15.4164 1.98163C15.0469 1.61219 14.4027 1.61148 14.0326 1.98163L12.7761 3.23809C12.5741 3.4397 12.2955 3.496 12.0323 3.38622C11.7684 3.2768 11.6111 3.04141 11.6111 2.7557V0.978148C11.6111 0.438759 11.1724 0 10.633 0H8.36704C7.82765 0 7.38889 0.438759 7.38889 0.978148V2.7557C7.38889 3.04141 7.23161 3.2768 6.96772 3.38622C6.70454 3.49635 6.42587 3.4397 6.22391 3.23809L4.96744 1.98163C4.5973 1.61148 3.95306 1.61219 3.58361 1.98163L1.98163 3.58361C1.79691 3.76833 1.69522 4.01428 1.69522 4.2757C1.69522 4.53678 1.79691 4.78237 1.98163 4.96744L3.23844 6.22391C3.44006 6.42587 3.4953 6.70383 3.38622 6.96772C3.27715 7.23161 3.04141 7.38889 2.7557 7.38889H0.978148C0.438759 7.38889 0 7.82765 0 8.36704V10.6326C0 11.1724 0.438759 11.6111 0.978148 11.6111H2.7557C3.04141 11.6111 3.2768 11.7684 3.38622 12.0323C3.49565 12.2962 3.44006 12.5741 3.23844 12.7761L1.98163 14.0326C1.79691 14.2173 1.69522 14.4632 1.69522 14.7243C1.69522 14.9857 1.79691 15.2313 1.98163 15.4164L3.58361 17.0184C3.95341 17.3882 4.5973 17.3889 4.96744 17.0184L6.22391 15.7616C6.42587 15.5599 6.70348 15.5044 6.96772 15.6138C7.23161 15.7232 7.38889 15.9586 7.38889 16.2443V18.0219C7.38889 18.5612 7.82765 19 8.36704 19H10.6326C11.172 19 11.6108 18.5612 11.6108 18.0219V16.2443C11.6108 15.9586 11.768 15.7232 12.0319 15.6138C12.2962 15.504 12.5738 15.5599 12.7757 15.7616L14.0322 17.0184C14.4024 17.3885 15.0466 17.3878 15.416 17.0184L17.018 15.4164C17.2027 15.2317 17.3044 14.9857 17.3044 14.7243C17.3044 14.4632 17.2027 14.2176 17.018 14.0326L15.7612 12.7761C15.5596 12.5741 15.5044 12.2962 15.6134 12.0323C15.7225 11.7684 15.9586 11.6111 16.2443 11.6111H18.0219C18.5612 11.6111 19 11.1724 19 10.633V8.36704C19 7.82765 18.5612 7.38889 18.0219 7.38889ZM18.2963 10.633C18.2963 10.7843 18.1731 10.9074 18.0219 10.9074H16.2443C15.6729 10.9074 15.1821 11.2353 14.9636 11.7631C14.7447 12.2909 14.8598 12.87 15.264 13.274L16.5209 14.5304C16.6282 14.6377 16.6282 14.8119 16.5209 14.9189L14.9189 16.5209C14.8119 16.6278 14.6377 16.6285 14.5304 16.5209L13.274 15.264C12.8697 14.8598 12.2909 14.7454 11.7631 14.9636C11.2353 15.1821 10.9074 15.6729 10.9074 16.2443V18.0219C10.9074 18.1731 10.7843 18.2963 10.633 18.2963H8.36704C8.21574 18.2963 8.09259 18.1731 8.09259 18.0219V16.2443C8.09259 15.6729 7.76467 15.1821 7.23689 14.9636C7.05991 14.89 6.87765 14.8541 6.6975 14.8541C6.34072 14.8541 5.99485 14.9949 5.72604 15.2637L4.46957 16.5205C4.36191 16.6282 4.18774 16.6275 4.08113 16.5205L2.47915 14.9185C2.37183 14.8112 2.37183 14.637 2.47915 14.5301L3.73596 13.2736C4.13989 12.8697 4.2553 12.2905 4.03644 11.7628C3.81794 11.2353 3.32711 10.9074 2.7557 10.9074H0.978148C0.826852 10.9074 0.703704 10.7843 0.703704 10.633V8.36704C0.703704 8.21574 0.826852 8.09259 0.978148 8.09259H2.7557C3.32711 8.09259 3.81794 7.76467 4.03644 7.23689C4.2553 6.70911 4.14024 6.12996 3.73596 5.72604L2.47915 4.46957C2.37183 4.36226 2.37183 4.18809 2.47915 4.08113L4.08113 2.47915C4.18809 2.37183 4.36226 2.37183 4.46957 2.47915L5.72604 3.73561C6.12961 4.13918 6.70841 4.25494 7.23689 4.03609C7.76467 3.81794 8.09259 3.32711 8.09259 2.7557V0.978148C8.09259 0.826852 8.21574 0.703704 8.36704 0.703704H10.6326C10.7843 0.703704 10.9074 0.826852 10.9074 0.978148V2.7557C10.9074 3.32711 11.2353 3.81794 11.7631 4.03644C12.2916 4.2553 12.87 4.13989 13.274 3.73596L14.5304 2.4795C14.6381 2.37219 14.8123 2.37219 14.9189 2.4795L16.5209 4.08148C16.6282 4.1888 16.6282 4.36296 16.5209 4.46993L15.264 5.72639C14.8601 6.13031 14.7447 6.70946 14.9636 7.23724C15.1821 7.76502 15.6729 8.09294 16.2443 8.09294H18.0219C18.1731 8.09259 18.2963 8.21574 18.2963 8.36704V10.633Z"
            fill="#424B54"
            />
            <Path d="M9.5 6C7.56994 6 6 7.56994 6 9.5C6 11.4301 7.56994 13 9.5 13C11.4301 13 13 11.4301 13 9.5C13 7.56994 11.4301 6 9.5 6ZM9.5 12.2222C7.99928 12.2222 6.77778 11.0007 6.77778 9.5C6.77778 7.99928 7.99928 6.77778 9.5 6.77778C11.0007 6.77778 12.2222 7.99928 12.2222 9.5C12.2222 11.0007 11.0007 12.2222 9.5 12.2222Z"
            fill="#424B54"
            />
        </Svg>
    )
}


const RepeatIcon = ({scaleBy=0, color}) => {
    let {height, width} = scaleIconSize(scaleBy, 22, 19)
    return (
        <Svg width={width} height={height} viewBox="0 0 22 19" fill="none" >
            <Path 
            d="M18.8108 9.5C18.8108 5.93224 15.7766 3.04 12.0338 3.04C9.13292 3.04 6.65775 4.77734 5.69093 7.22H7.59528L3.79764 12.92L0 7.22H2.35645C3.42775 3.07447 7.35411 0 12.0338 0C17.538 0 22 4.25329 22 9.5C22 14.7467 17.538 19 12.0338 19C9.20765 19 6.65404 17.8767 4.84226 16.0771L7.14331 13.9722C8.37862 15.1992 10.1116 15.96 12.0338 15.96C15.7766 15.96 18.8108 13.0678 18.8108 9.5Z" 
            fill={color}
            />
        </Svg>

    );
}

const CircleIcon = ({scaleBy=0, color}) => {
    let {height, width} = scaleIconSize(scaleBy, 20, 20);    
    return (
        <Svg width={width} height={height} viewBox="0 0 20 20" fill={color} >
            <Circle cx="10" cy="10" r="10" fill="white"/>
        </Svg>
    )
}

export {
    AddIcon,
    CheckIcon,
    BackIcon,
    ForwardIcon,
    RemoveIcon,
    ArrowIcon,
    DrawerIcon,
    LampIcon,
    SettingsIcon,
    RepeatIcon,
    CircleIcon
}